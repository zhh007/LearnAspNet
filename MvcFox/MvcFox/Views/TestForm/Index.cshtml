@model MvcFox.Models.TestFormEditViewModel
@{
    ViewBag.Title = "Index";
}

@section scripts {
    <script src="~/Scripts/knockout-3.2.0.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.unobtrusive-justjson.js"></script>
}
<h2>@ViewBag.Title.</h2>
<hr />
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Index", "TestForm", FormMethod.Post, new { @class = "form-horizontal use-justjson", role = "form" }))
            {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="提交" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $('form.use-justjson')
        .bind('before-submit', function (ev, form, args) {

        })
        .bind('ajax-success', function () {
            // do something.
            alert("保存成功。");
        })
        .bind('ajax-failed', function () {
            // maybe do something.
        })
        .bind('field-validated', function (ev, args) {
            // add or remove errors to error summary using args.errors.
        })
        .bind('field-valid', function (ev, el) {
            // do your own custom field error processing
            // (this here integrates for bootstrap style HTML errors).
            $(el).parents('div.control-group').removeClass('error');
        })
        .bind('field-invalid', function (ev, el) {
            $(el).parents('div.control-group').addClass('error');
        });
    });

</script>

<!--
参考资料：
ASP.NET MVC 3 - Getting your hooks into Unobtrusive Validation and AJAX
http://blog.dee4star.com/getting-hooks-into-unobtrusive-validation-and-ajax
-->